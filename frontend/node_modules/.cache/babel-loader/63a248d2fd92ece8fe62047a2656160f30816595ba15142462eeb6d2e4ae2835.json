{"ast":null,"code":"// api.js\nlet items = []; // Definisikan variabel items di sini\nlet setItems = () => {}; // Definisikan fungsi setItems di sini\nlet setGameName = () => {}; // Definisikan fungsi setGameName di sini\nlet setItemName = () => {}; // Definisikan fungsi setItemName di sini\nlet setItemDetails = () => {}; // Definisikan fungsi setItemDetails di sini\nlet setSelectedImage = () => {}; // Definisikan fungsi setSelectedImage di sini\n\nexport const deleteItem = async (itemId, setItems) => {\n  try {\n    // Kirim permintaan DELETE ke server untuk menghapus item berdasarkan itemId\n    const response = await fetch(`http://localhost:5001/api/deleteItem/${itemId}`, {\n      method: 'DELETE'\n    });\n    if (!response.ok) {\n      throw new Error(`Failed to delete item with ID ${itemId}`);\n    }\n\n    // Perbarui state items setelah item dihapus\n    setItems(prevItems => prevItems.filter(item => item.id !== itemId));\n  } catch (error) {\n    console.error('Error:', error);\n  }\n};\nexport const addItem = async (gameName, itemName, itemDetails, selectedImage, setItems) => {\n  try {\n    const formData = new FormData();\n    formData.append('gameName', gameName);\n    formData.append('itemName', itemName);\n    formData.append('itemDetails', itemDetails);\n    formData.append('image', selectedImage);\n    const response = await fetch('http://localhost:5001/api/addItem', {\n      method: 'POST',\n      body: formData\n    });\n    if (!response.ok) {\n      throw new Error('Failed to add item');\n    }\n    const data = await response.json();\n    setItems([...items, {\n      game_name: gameName,\n      item_name: itemName,\n      item_details: itemDetails\n    }]);\n    setGameName('');\n    setItemName('');\n    setItemDetails('');\n    setSelectedImage(null);\n  } catch (error) {\n    console.error('Error:', error);\n  }\n};","map":{"version":3,"names":["items","setItems","setGameName","setItemName","setItemDetails","setSelectedImage","deleteItem","itemId","response","fetch","method","ok","Error","prevItems","filter","item","id","error","console","addItem","gameName","itemName","itemDetails","selectedImage","formData","FormData","append","body","data","json","game_name","item_name","item_details"],"sources":["C:/Users/p/Documents/DMS/mocx/frontend/src/api/api.js"],"sourcesContent":["// api.js\r\nlet items = []; // Definisikan variabel items di sini\r\nlet setItems = () => {}; // Definisikan fungsi setItems di sini\r\nlet setGameName = () => {}; // Definisikan fungsi setGameName di sini\r\nlet setItemName = () => {}; // Definisikan fungsi setItemName di sini\r\nlet setItemDetails = () => {}; // Definisikan fungsi setItemDetails di sini\r\nlet setSelectedImage = () => {}; // Definisikan fungsi setSelectedImage di sini\r\n\r\nexport const deleteItem = async (itemId, setItems) => {\r\n    try {\r\n      // Kirim permintaan DELETE ke server untuk menghapus item berdasarkan itemId\r\n      const response = await fetch(`http://localhost:5001/api/deleteItem/${itemId}`, {\r\n        method: 'DELETE',\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to delete item with ID ${itemId}`);\r\n      }\r\n  \r\n      // Perbarui state items setelah item dihapus\r\n      setItems(prevItems => prevItems.filter(item => item.id !== itemId));\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n\r\nexport const addItem = async (gameName, itemName, itemDetails, selectedImage, setItems) => {\r\n  try {\r\n    const formData = new FormData();\r\n    formData.append('gameName', gameName);\r\n    formData.append('itemName', itemName);\r\n    formData.append('itemDetails', itemDetails);\r\n    formData.append('image', selectedImage);\r\n\r\n    const response = await fetch('http://localhost:5001/api/addItem', {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to add item');\r\n    }\r\n\r\n    const data = await response.json();\r\n    setItems([...items, { game_name: gameName, item_name: itemName, item_details: itemDetails }]);\r\n    setGameName('');\r\n    setItemName('');\r\n    setItemDetails('');\r\n    setSelectedImage(null);\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n};\r\n\r\n"],"mappings":"AAAA;AACA,IAAIA,KAAK,GAAG,EAAE,CAAC,CAAC;AAChB,IAAIC,QAAQ,GAAGA,CAAA,KAAM,CAAC,CAAC,CAAC,CAAC;AACzB,IAAIC,WAAW,GAAGA,CAAA,KAAM,CAAC,CAAC,CAAC,CAAC;AAC5B,IAAIC,WAAW,GAAGA,CAAA,KAAM,CAAC,CAAC,CAAC,CAAC;AAC5B,IAAIC,cAAc,GAAGA,CAAA,KAAM,CAAC,CAAC,CAAC,CAAC;AAC/B,IAAIC,gBAAgB,GAAGA,CAAA,KAAM,CAAC,CAAC,CAAC,CAAC;;AAEjC,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOC,MAAM,EAAEN,QAAQ,KAAK;EAClD,IAAI;IACF;IACA,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAE,wCAAuCF,MAAO,EAAC,EAAE;MAC7EG,MAAM,EAAE;IACV,CAAC,CAAC;IAEF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAE,iCAAgCL,MAAO,EAAC,CAAC;IAC5D;;IAEA;IACAN,QAAQ,CAACY,SAAS,IAAIA,SAAS,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKT,MAAM,CAAC,CAAC;EACrE,CAAC,CAAC,OAAOU,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;EAChC;AACF,CAAC;AAGH,OAAO,MAAME,OAAO,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,aAAa,EAAEtB,QAAQ,KAAK;EACzF,IAAI;IACF,MAAMuB,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEN,QAAQ,CAAC;IACrCI,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEL,QAAQ,CAAC;IACrCG,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEJ,WAAW,CAAC;IAC3CE,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,aAAa,CAAC;IAEvC,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;MAChEC,MAAM,EAAE,MAAM;MACdiB,IAAI,EAAEH;IACR,CAAC,CAAC;IAEF,IAAI,CAAChB,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;IACvC;IAEA,MAAMgB,IAAI,GAAG,MAAMpB,QAAQ,CAACqB,IAAI,CAAC,CAAC;IAClC5B,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;MAAE8B,SAAS,EAAEV,QAAQ;MAAEW,SAAS,EAAEV,QAAQ;MAAEW,YAAY,EAAEV;IAAY,CAAC,CAAC,CAAC;IAC7FpB,WAAW,CAAC,EAAE,CAAC;IACfC,WAAW,CAAC,EAAE,CAAC;IACfC,cAAc,CAAC,EAAE,CAAC;IAClBC,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC,CAAC,OAAOY,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;EAChC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
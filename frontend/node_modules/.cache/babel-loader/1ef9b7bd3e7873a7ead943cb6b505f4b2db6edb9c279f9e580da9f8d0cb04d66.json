{"ast":null,"code":"// api.js\nexport const deleteItem = async (itemId, setItems) => {\n  try {\n    // Kirim permintaan DELETE ke server untuk menghapus item berdasarkan itemId\n    const response = await fetch(`http://localhost:5001/api/deleteItem/${itemId}`, {\n      method: 'DELETE'\n    });\n    if (!response.ok) {\n      throw new Error(`Failed to delete item with ID ${itemId}`);\n    }\n\n    // Perbarui state items setelah item dihapus\n    setItems(prevItems => prevItems.filter(item => item.id !== itemId));\n  } catch (error) {\n    console.error('Error:', error);\n  }\n};","map":{"version":3,"names":["deleteItem","itemId","setItems","response","fetch","method","ok","Error","prevItems","filter","item","id","error","console"],"sources":["C:/Users/p/Documents/DMS/mocx/frontend/src/components/admins/admin.js"],"sourcesContent":["// api.js\r\nexport const deleteItem = async (itemId, setItems) => {\r\n    try {\r\n      // Kirim permintaan DELETE ke server untuk menghapus item berdasarkan itemId\r\n      const response = await fetch(`http://localhost:5001/api/deleteItem/${itemId}`, {\r\n        method: 'DELETE',\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to delete item with ID ${itemId}`);\r\n      }\r\n  \r\n      // Perbarui state items setelah item dihapus\r\n      setItems(prevItems => prevItems.filter(item => item.id !== itemId));\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n  "],"mappings":"AAAA;AACA,OAAO,MAAMA,UAAU,GAAG,MAAAA,CAAOC,MAAM,EAAEC,QAAQ,KAAK;EAClD,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,wCAAuCH,MAAO,EAAC,EAAE;MAC7EI,MAAM,EAAE;IACV,CAAC,CAAC;IAEF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAE,iCAAgCN,MAAO,EAAC,CAAC;IAC5D;;IAEA;IACAC,QAAQ,CAACM,SAAS,IAAIA,SAAS,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKV,MAAM,CAAC,CAAC;EACrE,CAAC,CAAC,OAAOW,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;EAChC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}